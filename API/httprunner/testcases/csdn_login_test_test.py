# NOTE: Generated By HttpRunner v4.2.0
# FROM: testcases\csdn_login_test.json
from httprunner import HttpRunner, Config, Step, RunRequest


class TestCaseCsdnLoginTest(HttpRunner):

    def setup(self):
        print("运行于测试用例之前")

    def teardown(self):
        print("运行于测试用例之后")
        # print(cookies) 


    config = (
        Config("testcase description")
        .variables(
            **{"pwdOrVerifyCode": "zhy1994317", "userIdentification": "18883285613"}
        )
        .export(*["cookies"])
    )

    teststeps = [ 
        Step(
            RunRequest("")
            .post("https://passport.csdn.net/v1/register/pc/login/doLogin")
            .with_headers(
                **{
                    "Accept": "application/json, text/plain, */*",
                    "Accept-Encoding": "gzip, deflate, br",
                    "Accept-Language": "zh-CN,zh;q=0.9",
                    "Connection": "keep-alive",
                    "Content-Length": "114",
                    "Content-Type": "application/json;charset=UTF-8",
                    "Host": "passport.csdn.net",
                    "Origin": "https://passport.csdn.net",
                    "Referer": "https://passport.csdn.net/login?code=applets",
                    "Sec-Fetch-Dest": "empty",
                    "Sec-Fetch-Mode": "cors",
                    "Sec-Fetch-Site": "same-origin",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36",
                    "sec-ch-ua": '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
                    "sec-ch-ua-mobile": "?0",
                    "sec-ch-ua-platform": '"Windows"',
                }
            )
            .with_json(
                {
                    "loginType": "1",
                    "pwdOrVerifyCode": "$pwdOrVerifyCode",
                    "uaToken": "",
                    "userIdentification": "$userIdentification",
                    "webUmidToken": "",
                }
            )
            .teardown_hook("${printResponse($response)}")
            .extract()
            .with_jmespath('headers."Set-Cookie"', "cookies")
            .validate()
            .assert_equal("status_code", 200, "assert response status code")
        ),
    ]


if __name__ == "__main__":
    TestCaseCsdnLoginTest().test_start()
