node('win_98.174') { //测试代理节点
    try {
        // 发布软件下载 
        stage('Download') {  
            bat '''
            %WORKSPACE%/ftp_download.bat /release/ugw6.0/ugw6.0_dailybuild/dev_ugw6.0_main/latest_version/RX27pro/ %WORKSPACE%/RX27pro
            '''
        }
        
        // 软件自动升级
        // stage('Upgrade') {
        //     bat '''D:/attrobot3/Scripts/activate.bat&&python %WORKSPACE%/upgrade.py'''
        //     // 判断是否升级成功
        //     bat '''
        //     for /f "tokens=1,2 delims==" %%a in (%WORKSPACE%/rf_include.ini) do (
        //         if %%a==upgrade set upgrade=%%b
        //     )
        //     IF "%upgrade%" NEQ "True" EXIT 1
        //     '''
        // }
        
        // // 自动化测试 
        // stage('Test') {
        //     bat (
        //     script: "del /S /Q %WORKSPACE%\\rf_results && md %WORKSPACE%\\rf_results",
        //     returnStatus: true
        //     )
        //     bat '''D:/attrobot3/Scripts/activate.bat&&robot -d %WORKSPACE%/rf_results -i test D:/Rebot_F_script/RX27pro/01_Testcases'''
        // }
        
        stage('Test Report') {
            script {
              step(
                    [
                      $class              : 'RobotPublisher',
                      outputPath          : 'rf_results',
                      outputFileName      : 'output.xml',
                      reportFileName      : 'report.html',
                      logFileName         : 'log.html',
                      otherFiles          : '*.png,*.jpg',
                      disableArchiveOutput: true,
                      passThreshold       : 100,
                      unstableThreshold   : 100,
                    ]
              )
            }
            script {
                String robotReportSummary = tm('ROBOT_FAILEDCASES: ${ROBOT_FAILEDCASES}, ROBOT_PASSPERCENTAGE: ${ROBOT_PASSPERCENTAGE}, ROBOT_PASSRATIO: ${ROBOT_PASSRATIO}, ROBOT_REPORTLINK: ${ROBOT_REPORTLINK}')
                // Instead of echo step you can use whatever you want with variable robotReportSummary
                echo "${robotReportSummary}"
                env.TEST_VARIABLE = "${robotReportSummary}"
            }
        }
        
    } catch (error) {
        currentBuild.result = 'FAILURE'
        throw error        
    // } finally {
    //     stage("email") {
    //         emailext (
    //             subject: '\'构建通知:${PROJECT_NAME} - Build # ${BUILD_NUMBER} - ${BUILD_STATUS}\'',
    //             to: "zhanghaiyong@tenda.cn", 
    //             body: '${FILE,path="email2.html"}',
    //             )
    //     }
    }
}